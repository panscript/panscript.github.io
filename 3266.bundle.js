"use strict";(self.webpackChunkpanscript=self.webpackChunkpanscript||[]).push([[3266],{3266:(r,e,t)=>{t.r(e),t.d(e,{default:()=>n});const n='// Les expressions combinent des variables à l\'aide d\'opérateurs standard\r\n\r\n// Elles peuvent utiliser des opérateurs numériques :\r\necrire(2 + 2)\t\t// addition\r\necrire(3 - 1)\t\t// soustraction\r\necrire(3 * 2)\t\t// multiplication\r\necrire(10 / 3)\t\t// division\r\necrire(10 % 3)\t\t// reste de la division\r\necrire(2 ^ 3)\t\t// exponentiation\r\nnouvelle_ligne()\r\n\r\n// Opérateurs logiques :\r\necrire(non vrai)\r\necrire(!vrai)\t\t\t// ! est la même chose que "non"\r\necrire(vrai et faux)\r\necrire(vrai && faux)\t// && est la même chose que "et"\r\necrire(vrai ou faux)\r\necrire(vrai || faux)\t// || est la même chose que "ou"\r\nnouvelle_ligne()\r\n\r\n// Et les opérateurs relationnels :\r\necrire(2 > 1)\t\t\t\t// plus grand\r\necrire(2 >= 2)\t\t\t\t// plus grand ou égal\r\necrire(2 < 1)\t\t\t\t// plus petite\r\necrire(2 <= 2)\t\t\t\t// plus petite ou égal\r\necrire(1 == 1)\t\t\t\t// égal\r\necrire(vrai == vrai)\t\t// égal\r\necrire("Olá" == "Olá")\t\t// égal\r\necrire(1 != 0)\t\t\t\t// différent\r\necrire(vrai != faux)\t\t// différent\r\necrire("Salut" != "Salut")\t// différent\r\nnouvelle_ligne()\r\n\r\n// La priorité des opérateurs peut être modifiée avec des parenthèses :\r\necrire(1 + 2 * 3)\r\necrire((1 + 2) * 3)\r\necrire(vrai ou faux et faux)\r\necrire((vrai ou faux) et faux)\r\nnouvelle_ligne()'}}]);