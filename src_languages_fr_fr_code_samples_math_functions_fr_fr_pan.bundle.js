"use strict";
(self["webpackChunkpanscript"] = self["webpackChunkpanscript"] || []).push([["src_languages_fr_fr_code_samples_math_functions_fr_fr_pan"],{

/***/ "./src/languages/fr_fr/code_samples/math_functions.fr_fr.pan":
/*!*******************************************************************!*\
  !*** ./src/languages/fr_fr/code_samples/math_functions.fr_fr.pan ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("// Funções matemáticas são funções que manipulam variáveis e valores numéricos.\r\n\r\n/*\r\n\tabsoluto(x)\r\n\tRetorna o valor absoluto (magnitude) de x.\r\n\tSe x >= 0, retorna x; senão, retorna -x.\r\n*/\r\nescreva(\">>> absoluto(x)\")\r\nescreva(absoluto(10))\r\nescreva(absoluto(-10))\r\nescreva(absoluto(0))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tmínimo(x, y)\r\n\tRetorna o menor valor entre x e y.\r\n*/\r\nescreva(\">>> mínimo(x, y)\")\r\nescreva(mínimo(1, 2))\r\nescreva(mínimo(2, 1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tmáximo(x, y)\r\n\tRetorna o maior valor entre x e y.\r\n*/\r\nescreva(\">>> máximo(x, y)\")\r\nescreva(máximo(1, 2))\r\nescreva(máximo(2, 1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tpiso(x)\r\n\tRetorna o maior número inteiro que é menor que x.\r\n*/\r\nescreva(\">>> piso(x)\")\r\nescreva(piso(0.5))\r\nescreva(piso(-0.5))\r\nescreva(piso(5.7))\r\nescreva(piso(-1.1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tteto(x)\r\n\tRetorna o menor número inteiro que é maior que x.\r\n*/\r\nescreva(\">>> teto(x)\")\r\nescreva(teto(0.5))\r\nescreva(teto(-0.5))\r\nescreva(teto(5.7))\r\nescreva(teto(-1.1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tarredonde(x)\r\n\tRetorna x arredondado para o inteiro mais próximo.\r\n\tO \"midpoint\" (.5) é arredondado \"away-from-zero\".\r\n*/\r\nescreva(\">>> arredonde(x)\")\r\nescreva(arredonde(0.5))\r\nescreva(arredonde(-0.5))\r\nescreva(arredonde(5.7))\r\nescreva(arredonde(-1.1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\ttrunque(x)\r\n\tRetorna a parte inteira de x, sem quaisquer casas decimais.\r\n*/\r\nescreva(\">>> trunque(x)\")\r\nescreva(trunque(0.5))\r\nescreva(trunque(-0.5))\r\nescreva(trunque(5.7))\r\nescreva(trunque(-1.1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tarredonde_n_casas(x, n)\r\n\tRetorna x arredondado em n casas decimais.\r\n\tO \"midpoint\" (.5) é arredondado \"away-from-zero\".\r\n*/\r\nescreva(\">>> arredonde_n_casas(x, n)\")\r\nescreva(arredonde_n_casas(0.55, 1))\r\nescreva(arredonde_n_casas(pi() / 4, 2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\ttrunque_n_casas(x, n)\r\n\tRetorna x truncado em n casas decimais.\r\n*/\r\nescreva(\">>> trunque_n_casas(x, n)\")\r\nescreva(trunque_n_casas(0.55, 1))\r\nescreva(trunque_n_casas(pi() / 4, 2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\treal_aleatório(a, b)\r\n\tRetorna um número real aleatório entre a (inclusivo) e b (exclusivo).\r\n*/\r\nescreva(\">>> real_aleatório(a, b)\")\r\nescreva(real_aleatório(0, 1))\r\nescreva(real_aleatório(1, 100))\r\nescreva(real_aleatório(1, 100))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tinteiro_aleatório(a, b)\r\n\tRetorna um número inteiro aleatório entre a (inclusivo) e b (exclusivo).\r\n*/\r\nescreva(\">>> inteiro_aleatório(a, b)\")\r\nescreva(inteiro_aleatório(0, 1))\r\nescreva(inteiro_aleatório(1, 100))\r\nescreva(inteiro_aleatório(1, 100))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\traiz_quadrada(x)\r\n\tRetorna a raiz quadrada de x. Equivalente a potência(x, 1/2).\r\n*/\r\nescreva(\">>> raiz_quadrada(x)\")\r\nescreva(raiz_quadrada(9))\r\nescreva(raiz_quadrada(16))\r\nescreva(potência(16, 1/2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tpotência(x, n)\r\n\tRetorna x elevado à n-ésima potência.\r\n*/\r\nescreva(\">>> potência(x, n)\")\r\nescreva(potência(2, 0))\r\nescreva(potência(2, 1))\r\nescreva(potência(2, 2))\r\nescreva(potência(2, 3))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tlogaritmo(x, b)\r\n\tRetorna o logaritmo de x na base b.\r\n\tO resultado é o exponente na equação: (b^e = x).\r\n*/\r\nescreva(\">>> logaritmo(x, b)\")\r\nescreva(logaritmo(8, 2))\r\nescreva(logaritmo(100, 10))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tpi()\r\n\tRetorna uma aproximação da constante Pi.\r\n*/\r\nescreva(\">>> pi()\")\r\nescreva(pi())\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tseno(x)\r\n\tRetorna o seno de x.\r\n\tx deve estar em radianos.\r\n*/\r\nescreva(\">>> seno(x)\")\r\nescreva(seno(pi() / 2))\r\nescreva(seno(-pi() / 2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tcosseno(x)\r\n\tRetorna o cosseno de x.\r\n\tx deve estar em radianos.\r\n*/\r\nescreva(\">>> cosseno(x)\")\r\nescreva(cosseno(0))\r\nescreva(cosseno(pi()))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\ttangente(x)\r\n\tRetorna a tangente de x.\r\n\tx deve estar em radianos.\r\n*/\r\nescreva(\">>> tangente(x)\")\r\nescreva(tangente(1))\r\nescreva(tangente(2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tarco_seno(x)\r\n\tRetorna o arco seno de x. O inverso do seno.\r\n\tO resultado é em radianos.\r\n*/\r\nescreva(\">>> arco_seno(x)\")\r\nescreva(arco_seno(1))\r\nescreva(arco_seno(-1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tarco_cosseno(x)\r\n\tRetorna o arco cosseno de x. O inverso do cosseno.\r\n\tO resultado é em radianos.\r\n*/\r\nescreva(\">>> arco_cosseno(x)\")\r\nescreva(arco_cosseno(1))\r\nescreva(arco_cosseno(-1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tarco_tangente(x)\r\n\tRetorna o arco tangente de x. O inverso da tangente.\r\n\tO resultado é em radianos.\r\n*/\r\nescreva(\">>> arco_tangente(x)\")\r\nescreva(arco_tangente(1))\r\nescreva(arco_tangente(-1))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\texponencial(x)\r\n\tRetorna a exponencial de x.\r\n\texponencial(1) é o número de Euler.\r\n*/\r\nescreva(\">>> exponencial(x)\")\r\nescreva(exponencial(0.5))\r\nescreva(exponencial(1))\r\nescreva(exponencial(2))\r\nnova_linha()\r\n\r\n\r\n/*\r\n\tlogaritmo_natural(x)\r\n\tRetorna o logaritmo natural de x. O inverso da exponencial.\r\n*/\r\nescreva(\">>> logaritmo_natural(x)\")\r\nescreva(logaritmo_natural(0.5))\r\nescreva(logaritmo_natural(1))\r\nescreva(logaritmo_natural(2))\r\nnova_linha()");

/***/ })

}]);