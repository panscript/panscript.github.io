"use strict";
(self["webpackChunkpanscript"] = self["webpackChunkpanscript"] || []).push([["src_languages_en_us_code_samples_math_functions_en_us_pan"],{

/***/ "./src/languages/en_us/code_samples/math_functions.en_us.pan":
/*!*******************************************************************!*\
  !*** ./src/languages/en_us/code_samples/math_functions.en_us.pan ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("// Math functions are functions that manipulate numeric variables and values.\r\n\r\n/*\r\n\tabsolute(x)\r\n\tReturns the absolute value (magnitude) of x.\r\n\tIf x >= 0, it returns x; otherwise, it returns -x.\r\n*/\r\nwrite(\">>> absolute(x)\")\r\nwrite(absolute(10))\r\nwrite(absolute(-10))\r\nwrite(absolute(0))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tminimum(x, y)\r\n\tReturns the smallest number between x and y.\r\n*/\r\nwrite(\">>> minimum(x, y)\")\r\nwrite(minimum(1, 2))\r\nwrite(minimum(2, 1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tmaximum(x, y)\r\n\tReturns the greatest number between x and y.\r\n*/\r\nwrite(\">>> maximum(x, y)\")\r\nwrite(maximum(1, 2))\r\nwrite(maximum(2, 1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tfloor(x)\r\n\tReturns the greatest integer number that is smaller than x.\r\n*/\r\nwrite(\">>> floor(x)\")\r\nwrite(floor(0.5))\r\nwrite(floor(-0.5))\r\nwrite(floor(5.7))\r\nwrite(floor(-1.1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tceiling(x)\r\n\tReturns the smallest integer number that is greater than x.\r\n*/\r\nwrite(\">>> ceiling(x)\")\r\nwrite(ceiling(0.5))\r\nwrite(ceiling(-0.5))\r\nwrite(ceiling(5.7))\r\nwrite(ceiling(-1.1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tround(x)\r\n\tReturns x rounded to the nearest integer.\r\n\tMidpoint (.5) is rounded away-from-zero.\r\n*/\r\nwrite(\">>> round(x)\")\r\nwrite(round(0.5))\r\nwrite(round(-0.5))\r\nwrite(round(5.7))\r\nwrite(round(-1.1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\ttruncate(x)\r\n\tReturns the integer part of x, without any decimals.\r\n*/\r\nwrite(\">>> truncate(x)\")\r\nwrite(truncate(0.5))\r\nwrite(truncate(-0.5))\r\nwrite(truncate(5.7))\r\nwrite(truncate(-1.1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tround_n_places(x, n)\r\n\tReturns x rounded to n decimal places.\r\n\tMidpoint (.5) is rounded away-from-zero.\r\n*/\r\nwrite(\">>> round_n_places(x, n)\")\r\nwrite(round_n_places(0.55, 1))\r\nwrite(round_n_places(pi() / 4, 2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\ttruncate_n_places(x, n)\r\n\tReturns x truncated to n decimal places.\r\n*/\r\nwrite(\">>> truncate_n_places(x, n)\")\r\nwrite(truncate_n_places(0.55, 1))\r\nwrite(truncate_n_places(pi() / 4, 2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\trandom_real(a, b)\r\n\tReturns a random real number between a (inclusive) and b (exclusive).\r\n*/\r\nwrite(\">>> random_real(a, b)\")\r\nwrite(random_real(0, 1))\r\nwrite(random_real(1, 100))\r\nwrite(random_real(1, 100))\r\nnew_line()\r\n\r\n\r\n/*\r\n\trandom_integer(a, b)\r\n\tReturns a random integer number between a (inclusive) and b (exclusive).\r\n*/\r\nwrite(\">>> random_integer(a, b)\")\r\nwrite(random_integer(0, 1))\r\nwrite(random_integer(1, 100))\r\nwrite(random_integer(1, 100))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tsquare_root(x)\r\n\tReturns the square root of x. Equivalent to power(x, 1/2).\r\n*/\r\nwrite(\">>> square_root(x)\")\r\nwrite(square_root(9))\r\nwrite(square_root(16))\r\nwrite(power(16, 1/2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tpower(x, n)\r\n\tReturns x raised to the nth power.\r\n*/\r\nwrite(\">>> power(x, n)\")\r\nwrite(power(2, 0))\r\nwrite(power(2, 1))\r\nwrite(power(2, 2))\r\nwrite(power(2, 3))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tlogarithm(x, b)\r\n\tReturns the logarithm of x in base b.\r\n\tThe result is the exponent in the equation: (b^e = x).\r\n*/\r\nwrite(\">>> logarithm(x, b)\")\r\nwrite(logarithm(8, 2))\r\nwrite(logarithm(100, 10))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tpi()\r\n\tReturns an approximation of the constant pi.\r\n*/\r\nwrite(\">>> pi()\")\r\nwrite(pi())\r\nnew_line()\r\n\r\n\r\n/*\r\n\tsine(x)\r\n\tReturns the sine of x.\r\n\tx should be in radians.\r\n*/\r\nwrite(\">>> sine(x)\")\r\nwrite(sine(pi() / 2))\r\nwrite(sine(-pi() / 2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tcosine(x)\r\n\tReturns the cosine of x.\r\n\tx should be in radians.\r\n*/\r\nwrite(\">>> cosine(x)\")\r\nwrite(cosine(0))\r\nwrite(cosine(pi()))\r\nnew_line()\r\n\r\n\r\n/*\r\n\ttangent(x)\r\n\tReturns the tangent of x.\r\n\tx should be in radians.\r\n*/\r\nwrite(\">>> tangent(x)\")\r\nwrite(tangent(1))\r\nwrite(tangent(2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tarc_sine(x)\r\n\tReturns the arc sine of x. The inverse of sine.\r\n\tResult is in radians.\r\n*/\r\nwrite(\">>> arc_sine(x)\")\r\nwrite(arc_sine(1))\r\nwrite(arc_sine(-1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tarc_cosine(x)\r\n\tReturns the arc cosine of x. The inverse of cosine.\r\n\tResult is in radians.\r\n*/\r\nwrite(\">>> arc_cosine(x)\")\r\nwrite(arc_cosine(1))\r\nwrite(arc_cosine(-1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tarc_tangent(x)\r\n\tReturns the arc tangent of x. The inverse of tangent.\r\n\tResult is in radians.\r\n*/\r\nwrite(\">>> arc_tangent(x)\")\r\nwrite(arc_tangent(1))\r\nwrite(arc_tangent(-1))\r\nnew_line()\r\n\r\n\r\n/*\r\n\texponential(x)\r\n\tReturns the exponential of x.\r\n\texponential(1) is Euler's number.\r\n*/\r\nwrite(\">>> exponential(x)\")\r\nwrite(exponential(0.5))\r\nwrite(exponential(1))\r\nwrite(exponential(2))\r\nnew_line()\r\n\r\n\r\n/*\r\n\tnatural_logarithm(x)\r\n\tReturns the natural logarithm of x. The inverse of exponential.\r\n*/\r\nwrite(\">>> natural_logarithm(x)\")\r\nwrite(natural_logarithm(0.5))\r\nwrite(natural_logarithm(1))\r\nwrite(natural_logarithm(2))\r\nnew_line()");

/***/ })

}]);